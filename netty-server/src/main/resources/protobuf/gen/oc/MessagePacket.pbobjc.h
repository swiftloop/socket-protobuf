// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessagePacket.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum HeartbeatType

typedef GPB_ENUM(HeartbeatType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  HeartbeatType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  HeartbeatType_Ping = 0,
  HeartbeatType_Pong = 1,
};

GPBEnumDescriptor *HeartbeatType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL HeartbeatType_IsValidValue(int32_t value);

#pragma mark - Enum ServiceType

typedef GPB_ENUM(ServiceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ServiceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 登录 */
  ServiceType_Login = 0,

  /** 心跳 */
  ServiceType_Heartbeat = 1,
};

GPBEnumDescriptor *ServiceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ServiceType_IsValidValue(int32_t value);

#pragma mark - Enum MessageType

typedef GPB_ENUM(MessageType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  MessageType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 一对一的文本消息 */
  MessageType_MsgTypeSingleText = 0,

  /** 一对一的图片消息 */
  MessageType_MsgTypeSingleImage = 1,

  /** 一对一的语音消息 */
  MessageType_MsgTypeSingleAudio = 2,

  /** 群组文本消息 */
  MessageType_MsgTypeGroupText = 3,

  /** 群组图片消息 */
  MessageType_MsgTypeGroupImage = 4,

  /** 群组语音消息 */
  MessageType_MsgTypeGroupAudio = 5,
};

GPBEnumDescriptor *MessageType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL MessageType_IsValidValue(int32_t value);

#pragma mark - MessagePacketRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface MessagePacketRoot : GPBRootObject
@end

#pragma mark - Packet

typedef GPB_ENUM(Packet_FieldNumber) {
  Packet_FieldNumber_Sid = 1,
  Packet_FieldNumber_Cid = 2,
  Packet_FieldNumber_Ver = 3,
  Packet_FieldNumber_SeqNo = 4,
  Packet_FieldNumber_Body = 5,
};

GPB_FINAL @interface Packet : GPBMessage

/** 服务id */
@property(nonatomic, readwrite) uint32_t sid;

/** 命令id */
@property(nonatomic, readwrite) uint32_t cid;

/** 版本 */
@property(nonatomic, readwrite) uint32_t ver;

/** 消息id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *seqNo;

/** 消息体 */
@property(nonatomic, readwrite, copy, null_resettable) NSData *body;

@end

#pragma mark - LoginReq

typedef GPB_ENUM(LoginReq_FieldNumber) {
  LoginReq_FieldNumber_UserId = 1,
  LoginReq_FieldNumber_Token = 2,
  LoginReq_FieldNumber_DeviceType = 3,
  LoginReq_FieldNumber_Alias = 4,
  LoginReq_FieldNumber_Tag = 5,
  LoginReq_FieldNumber_Platform = 6,
};

GPB_FINAL @interface LoginReq : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceType;

@property(nonatomic, readwrite, copy, null_resettable) NSString *alias;

@property(nonatomic, readwrite, copy, null_resettable) NSString *tag;

@property(nonatomic, readwrite, copy, null_resettable) NSString *platform;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
